# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch: {}
    

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '8', '11' ]
    steps:
    - uses: actions/checkout@v2    
    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        java-version: ${{ matrix.java }}
        distribution: 'zulu'
        server-username: MAVEN_USERNAME # env variable for username in deploy
        server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
        gpg-private-key: GPG_PRIVATE_KEY # env variable of the GPG private key to import
        gpg-passphrase:  GPG_PASSPHRASE # env variable for GPG private key passphrase

    - name: Build with Maven
      run: sh .gpg-generate.sh && mvn -B verify --file pom.xml 
      env:
        GPG_EMAIL: ${{ secrets.GPG_EMAIL }} # GPG_EMAIL
        GPG_NAME:  ${{ secrets.GPG_NAME  }} # GPG_NAME
        MAVEN_USERNAME:      ${{ secrets.MAVEN_CENTRAL_USER  }} # SONATYPE_USERNAME
        MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }} # SONATYPE_PASSWORD
  
#   CodeQL:
#     # CodeQL runs on ubuntu-latest and windows-latest
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v2
#       with:
#         # We must fetch at least the immediate parents so that if this is
#         # a pull request then we can checkout the head.
#         fetch-depth: 2

#     # Initializes the CodeQL tools for scanning.
#     - name: Initialize CodeQL
#       uses: github/codeql-action/init@v1
#       with:
#         languages: java

#     - name: build
#       run: mvn --quiet --batch-mode clean install

#     - name: Perform CodeQL Analysis
#       uses: github/codeql-action/analyze@v1
          
#   codeclimate:
#     runs-on: ubuntu-latest
#     needs: build
#     steps:
#       - name: checkout
#         uses: actions/checkout@master
#         with:
#           ref: ${{ github.ref }}
#       - name: Download main project dir
#         uses: actions/download-artifact@v1
#         with:
#           name: mirus
#       - name: Upload coverage to Code Climate
#         uses: paambaati/codeclimate-action@v2.6.0
#         env:
#           CC_TEST_REPORTER_ID: # todo  873529a2ad74a48f14a73b29dd3f392c7da63902534ac0fd224746f32ba77ac5
#           JACOCO_SOURCE_PATH: "${{github.workspace}}/src/main/java"
#         with:
#           # The report file must be there, otherwise Code Climate won't find it
#           coverageCommand: echo "already done"
#           coverageLocations: |
#             ${{github.workspace}}/target/site/jacoco/jacoco.xml:jacoco
